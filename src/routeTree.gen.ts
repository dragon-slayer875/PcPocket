/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MainImport } from './routes/main'
import { Route as IndexImport } from './routes/index'
import { Route as MainIndexImport } from './routes/main/index'
import { Route as MainBookmarksImport } from './routes/main/bookmarks'
import { Route as MainAboutImport } from './routes/main/about'

// Create/Update Routes

const MainRoute = MainImport.update({
  id: '/main',
  path: '/main',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const MainIndexRoute = MainIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MainRoute,
} as any)

const MainBookmarksRoute = MainBookmarksImport.update({
  id: '/bookmarks',
  path: '/bookmarks',
  getParentRoute: () => MainRoute,
} as any)

const MainAboutRoute = MainAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => MainRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/main': {
      id: '/main'
      path: '/main'
      fullPath: '/main'
      preLoaderRoute: typeof MainImport
      parentRoute: typeof rootRoute
    }
    '/main/about': {
      id: '/main/about'
      path: '/about'
      fullPath: '/main/about'
      preLoaderRoute: typeof MainAboutImport
      parentRoute: typeof MainImport
    }
    '/main/bookmarks': {
      id: '/main/bookmarks'
      path: '/bookmarks'
      fullPath: '/main/bookmarks'
      preLoaderRoute: typeof MainBookmarksImport
      parentRoute: typeof MainImport
    }
    '/main/': {
      id: '/main/'
      path: '/'
      fullPath: '/main/'
      preLoaderRoute: typeof MainIndexImport
      parentRoute: typeof MainImport
    }
  }
}

// Create and export the route tree

interface MainRouteChildren {
  MainAboutRoute: typeof MainAboutRoute
  MainBookmarksRoute: typeof MainBookmarksRoute
  MainIndexRoute: typeof MainIndexRoute
}

const MainRouteChildren: MainRouteChildren = {
  MainAboutRoute: MainAboutRoute,
  MainBookmarksRoute: MainBookmarksRoute,
  MainIndexRoute: MainIndexRoute,
}

const MainRouteWithChildren = MainRoute._addFileChildren(MainRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/main': typeof MainRouteWithChildren
  '/main/about': typeof MainAboutRoute
  '/main/bookmarks': typeof MainBookmarksRoute
  '/main/': typeof MainIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/main/about': typeof MainAboutRoute
  '/main/bookmarks': typeof MainBookmarksRoute
  '/main': typeof MainIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/main': typeof MainRouteWithChildren
  '/main/about': typeof MainAboutRoute
  '/main/bookmarks': typeof MainBookmarksRoute
  '/main/': typeof MainIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/main' | '/main/about' | '/main/bookmarks' | '/main/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/main/about' | '/main/bookmarks' | '/main'
  id: '__root__' | '/' | '/main' | '/main/about' | '/main/bookmarks' | '/main/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MainRoute: typeof MainRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MainRoute: MainRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/main"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/main": {
      "filePath": "main.tsx",
      "children": [
        "/main/about",
        "/main/bookmarks",
        "/main/"
      ]
    },
    "/main/about": {
      "filePath": "main/about.tsx",
      "parent": "/main"
    },
    "/main/bookmarks": {
      "filePath": "main/bookmarks.tsx",
      "parent": "/main"
    },
    "/main/": {
      "filePath": "main/index.tsx",
      "parent": "/main"
    }
  }
}
ROUTE_MANIFEST_END */
